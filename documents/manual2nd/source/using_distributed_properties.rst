==========
概要
==========

MIntには、ワークフローを構成するモジュール内の一部分の処理を、MIntの計算ノード以外の「外部計算機」に行わせる機能がある。本機能によって、ユーザには下記に挙げる利点がある。

* 部外秘プログラムの使用
* 部外秘データの使用
* 特殊構成 (MIntの計算ノードでは対応できない) の計算機を使用できる
* 商用ソフトの使用 (MIntの計算ノードにも商用ソフトがインストールされているが、ライセンスの規定上、ほとんどの場合NIMS外からは利用できない)

外部計算資源の利用に際しては、MInt、外部計算機の双方が後述のセキュリティ水準を満たす必要がある。

1. 産学共同研究契約、MIntシステム利用規定、その他のMInt利用に関わる契約・規定の各条項を遵守すること。
2. MInt提供側は、下記のセキュリティ対策を実施すること。

    * 第三者によるMIntのセキュリティ分析・セキュリティリスク診断を実施し、リストを避ける設計を維持すること。
    * MIntを構成するサーバのOS・ミドルウェア・ライブラリ等に対し、継続的に脆弱性データベースを確認し、必要なアップデートを実施すること。
    * 不正アクセス監視やネットワーク負荷監視を実施すること。
3. 外部計算資源の提供側は、外部計算機として利用されるコンピュータに対し、十分なセキュリティ対策を実施すること。継続的に利用する場合には、定期的に対策状況を確認し、セキュリティレベルを維持すること。

外部計算資源利用には、SSH方式とWebAPI方式がある。
前者はMIntから外部計算機へSSHで必要なデータとコマンドをプッシュする方式である。
単純で、外部計算を遅延なく開始できる利点があるが、外部計算機側でMIntに対しSSHのポートを開放してプッシュを受け入れる必要がある点は、特に企業ユーザではハードルが高いことが想定される。
これに対し、後者は数分間隔で外部計算機側からMIntにWebAPI(https)でポーリングし、処理すべき案件が存在した場合は、必要なデータとコマンドがプルされる方式である。
この方式では外部計算機側にポート開放の必要が無いが、外部計算開始までにポーリング間隔に相当する遅延が生じる。

MIntが収集する情報はワークフローの各モジュールの入出力ポートの情報のみであるため、モジュールの内部で完結する本機能に関し、モジュールと外部計算機の間で送受信される情報は収集対象外である。

SSHでは.authorized_keysの設定で外部計算機がMIntに実行を認めるコマンドを固定できる。
WebAPI方式では、外部計算機は自分でコマンドを実行する。
また、もちろん外部計算が返却するデータは十分に限定することができる。

上記の機構によって安全な外部計算が保証される。下記の各章で、具体的な利用方法について記す。
また、外部計算資源の利用にあたって本書では不明な点は、ユーザとMInt運用チームとの協議のうえで決定するものとする。

.. raw:: latex

    \newpage
=======================
外部計算資源の利用イメージ
=======================

外部計算資源利用時の処理の流れを下図に示す。

* MIntはNIMS構内のDMZ(物理的にはNIMS構内のサーバ室に存在するが、ネットワーク的には機構内LANとインターネットの双方からファイアウォールで切り離された領域)に存在する。
* ユーザはMInt上に、外部計算を利用するモジュールを含んだワークフローを持つ。当該モジュールやワークフローの参照・実行権限は自機関内などに限定できる。
* ユーザは当該ワークフローに必要な入力を与えて実行する。
* MIntはモジュールを順次実行する。
* 各モジュールは定義された処理を実行する。外部計算を利用するモジュールでは、一部の処理が外部計算機に受け渡される。
* 外部計算機は処理の過程で、MIntに置けないデータやプログラムにアクセスできる。これらへのアクセスを外部計算機での処理の中で完結させることで、安全な利用が可能となる。
* モジュールは外部計算機から返送された結果を受け取り、定義されていれば必要な後処理を行ってモジュールとしての出力を行う。
* MIntはワークフローの残りの部分を実行し、ユーザに最終結果を出力する。
.. raw:: html

   <A HREF="_images/remote_execution_image.png"><img src="_images/remote_execution_image.png" /></A>

  外部計算機資源の利用イメージ
  
.. figure:: images/image_for_use.eps
  :scale: 70%
  :align: center

  外部計算機資源の利用イメージ
  
SSH方式とWebAPI方式では、下記のように外部計算機にアクセスされる。外部計算機側に必要なファイアウォールの解除条件についても、合わせて示す。

* SSH方式
    + MInt側からSSHで外部計算機にアクセスし、必要なデータとコマンドをプッシュし、コマンドを発行し、結果を得る。
    + 外部計算機側SSHサーバのポート(TCP/22以外でも可)のインバウンドアクセスの開放が必要である。
* WebAPI方式
    + 外部計算機側からMIntのAPIサーバにポーリングを行い、要処理案件の有無を確認する。ポーリング間隔は数分程度を想定している。案件があれば、外部計算機が必要なデータとコマンドをプルし、自らコマンドを実行し、APIで結果を送信する。
    + MIntのAPIサーバへのhttps(TCP/443)のアウトバウンドアクセスの許可が必要である。

モジュールと外部計算機の間の送受信
==============================

* SSH方式

     * ファイル

          + 非圧縮(内部でrsync -avを利用)
          + サイズ無制限
     * コマンドなどの文字列

          + 非圧縮
          + Base64エンコード無し
* WebAPI方式

     * ファイル

          + 非圧縮
          + Base64エンコード
          + 2 GiB未満
     * コマンド列などの文字列

          + 非圧縮, Base64エンコード無し)


使用するリポジトリ
==================

外部計算資源の利用開始に必要な資材は、GitHub 上のリポジトリ [#whatisRepository]_ に用意されている。ユーザはこれらを外部計算機に配置し、プログラム実行に必要なコマンド、ファイル送受信の手続きを設定、埋め込むだけでよい。

- misrc_remote_workflow 

    - 主に外部計算機側で実行されるスクリプトのサンプルが登録されている。 
- misrc_distributed_computing_assist.api 

    - WebAPI方式のためのシステム構築用のプログラム、サンプルが登録されている。 
    - MIntシステム側で使用するプログラムは「debug/mi-system-side」にある。
    - 外部計算機側で使用するプログラムは「debug/remote-side」にある。 

展開したファイルの扱い
----------------------

リポジトリからダウンロードしたファイル類には、以下の制約を課すものとする。

1. 一部のファイル [#whatisOtherthanfiles]_ を除いてライセンスは「★★★」が適用され、ソースコードの著作権はMIntが保持する。
2. ユーザによる改変によって外部計算機資源の有効利用のワークフローが動作しなくなってもMInt側(★★)は責任を追わない。
3. 外部計算機資源側独自の改変を1. 以外のスクリプトに適用したい場合は、MInt(★★)と個別に協議する。

.. [#whatisRepository] 本機能を実現する資材などを格納したサーバのこと。GitHubを利用しているが、MIntがアカウントを発行したユーザのみダウンロードが可能である。アップロードはユーザには通常許可していない。
.. [#whatisOtherthanfiles] misrc_remote_workflow/scripts以下にある、SSH方式でのexecute_remote-side_program_ssh.sample.shを複製したファイルと、WebAPI方式でのexecute_remote-side_program_api.sample.shおよびこれらを複製したスクリプトファイルを指す。
